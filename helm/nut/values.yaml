# Default values for nut.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: docker.io/aztechian/nut
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3493

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  host: "ups.svc.local"
  tls: []
  path: "/"
  pathType: ImplementationSpecific
  additionalHosts: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

ups: []

exporter:
  enabled: false
  vars: []
  telemetryPath: ""
  exporterTelemetryPath: ""
  service:
    enabled: true
    port: 9199
    type: ClusterIP
    annotations: {}
    labels: {}
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    externalTrafficPolicy: Cluster
    clusterIP: ""
  ingress:
    enabled: false
    className: ""
    annotations: {}
    labels: {}
    host: "nut-exporter.svc.local"
    tls: []
    path: "/"
    pathType: ImplementationSpecific
    additionalHosts: []

upsmon:
  enabled: false
  updateStrategy: RollingUpdate
  maxUnavailable: 30%
  labels: {}
  annotations: {}
  podAnnotations: {}
  extraVolumes: []
  serviceAccount:
    create: false
    annotations: {}
  securityContext: {}
  containerSecurityContext:
    allowPrivilegeEscalation: false
    runAsUser: 0
  extraVolumeMounts: []
  affinity: {}
  tolerations: []
  nodeSelector: {}
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 128Mi
  user: ""
  password: ""
  config:
    settings:
      DEADTIME: 90
    notifycmd: "/usr/sbin/upssched"
    notifytypes:
      - ONBATT
      - ONLINE
      - LOWBATT
      - FSD
      - COMMOK
      - COMMBAD
      - SHUTDOWN
      - REPLBATT
      - NOCOMM
    notifymsg:
      ONLINE: "UPS %s on line power"
      ONBATT: "UPS %s is running on battery backup"
      LOWBATT: "%s UPS battery is low"
      FSD: "UPS %s is being forcibly shutdown!"
      SHUTDOWN: "UPS %s is going into shutdown!"
      REPLBATT: "UPS %s battery needs to be replaced!"
      NOCOMM: "Someone has stolen the UPS %s"
